/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ClientRmi;

import Metier.Book;
import Metier.Loan;
import Metier.User;
import Services.Bookinterface;
import Services.LoanInterface;
import Services.UserInterface;
import java.awt.Component;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JList;
import javax.swing.JOptionPane;

/**
 *
 * @author Utente
 */
public class LoanClient extends javax.swing.JFrame {

    /**
     * Creates new form LoanClient
     */
    public LoanClient() {
        initComponents();
        populateBookComboBox();
        populateuserComboBox();
       loadloans();
    }
    private void loadloans() {
    try {
        // Chiamata al server RMI per ottenere tutti i libri
         Registry registry = LocateRegistry.getRegistry("127.0.0.1", 1234);
            LoanInterface Stub = (LoanInterface) registry.lookup("loans");
        List<Loan> loans = Stub.getAllLoans();
   
        // Popola la tabella con i dati dei libri
       LoanTableModel model = new LoanTableModel(loans); 
        tb_list.setModel(model);
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Errore durante il caricamento dei libri: " + ex.getMessage(), "Errore", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace();
    }
}
    
  private void populateBookComboBox() {
    try {
        // Ottieni la lista dei libri dal server RMI
         Registry registry = LocateRegistry.getRegistry("127.0.0.1", 1234);
            Bookinterface Stub = (Bookinterface) registry.lookup("books");
        List<Book> books = Stub.getAllBooks();
        // Crea un DefaultComboBoxModel per i titoli dei libri
        DefaultComboBoxModel<String> bookModel = new DefaultComboBoxModel<>();
        // Popola il modello con i titoli dei libri
        for (Book book : books) {
            bookModel.addElement(book.getTitle());
        }
        // Imposta il modello nel ComboBox dei libri
        jComboBox2.setModel(bookModel);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Errore durante il recupero dei libri: " + e.getMessage());
    }
}

   private void populateuserComboBox() {
    try {
        
        // Ottieni la lista dei libri dal server RMI
         Registry registry = LocateRegistry.getRegistry("127.0.0.1", 1234);
           UserInterface Stub = (UserInterface) registry.lookup("users");
        List<User> users = Stub.getAllUsers();
        // Crea un DefaultComboBoxModel per i titoli dei libri
        DefaultComboBoxModel<String> userModel = new DefaultComboBoxModel<>();
        // Popola il modello con i titoli dei libri
        for (User user : users) {
            userModel.addElement(user.getFirstName());
        }
        // Imposta il modello nel ComboBox dei libri
        jComboBox1.setModel(userModel);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Errore durante il recupero dei libri: " + e.getMessage());
    }
}
    // Metodo per recuperare le date dai JTextField
    private Date parseDate(String dateStr) {
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        try {
            return dateFormat.parse(dateStr);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Formato data non valido. Utilizzare il formato dd/MM/yyyy.");
            return null;
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_id = new javax.swing.JTextField();
        m = new javax.swing.JPanel();
        confirmLoan = new javax.swing.JButton();
        bt_update = new javax.swing.JButton();
        bt_supp = new javax.swing.JButton();
        txt_search = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_list = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        txtStartDate = new javax.swing.JTextField();
        txtEndDate = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Century Schoolbook", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Prestito Management Client");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Matricule :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("  firstname :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("DateBorrowed :");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText(" title :");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("DateReturned :");

        txt_id.setBackground(new java.awt.Color(255, 0, 102));
        txt_id.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        m.setBackground(new java.awt.Color(204, 0, 204));
        m.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        confirmLoan.setBackground(new java.awt.Color(204, 0, 204));
        confirmLoan.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        confirmLoan.setForeground(new java.awt.Color(255, 255, 255));
        confirmLoan.setText("Insert");
        confirmLoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmLoanActionPerformed(evt);
            }
        });

        bt_update.setBackground(new java.awt.Color(204, 0, 204));
        bt_update.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        bt_update.setForeground(new java.awt.Color(255, 255, 255));
        bt_update.setText("Update");
        bt_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_updateActionPerformed(evt);
            }
        });

        bt_supp.setBackground(new java.awt.Color(204, 0, 204));
        bt_supp.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        bt_supp.setForeground(new java.awt.Color(255, 255, 255));
        bt_supp.setText("Delete");
        bt_supp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_suppActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mLayout = new javax.swing.GroupLayout(m);
        m.setLayout(mLayout);
        mLayout.setHorizontalGroup(
            mLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(confirmLoan, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(119, 119, 119)
                .addComponent(bt_update, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE)
                .addComponent(bt_supp, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );
        mLayout.setVerticalGroup(
            mLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(mLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmLoan, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_update, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_supp, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        txt_search.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_searchActionPerformed(evt);
            }
        });
        txt_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_searchKeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Search :");

        tb_list.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tb_list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tb_listMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tb_list);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtStartDate.setText("dd/MM/yyyy");

        txtEndDate.setText("dd/mm/yyyy");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("Status :");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YES", "NO" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtEndDate))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtStartDate)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(27, 27, 27))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(m, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(61, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)))
                .addComponent(m, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tb_listMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_listMouseReleased
        // TODO add your handling code here:
        // Ottieni l'indice della riga selezionata
       
    }//GEN-LAST:event_tb_listMouseReleased

    private void txt_searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyReleased
        // TODO add your handling code here:
try {
         Registry registry = LocateRegistry.getRegistry("127.0.0.1", 1234);
             LoanInterface Stub = (LoanInterface) registry.lookup("loans");
        String searchTerm = txt_search.getText().trim();
        // Chiamata al server RMI per eseguire la ricerca
        List<Loan> searchResults = Stub.searchLoans(searchTerm);
        LoanTableModel model = new LoanTableModel(searchResults);
        tb_list.setModel(model);
    } catch (Exception ex) {
        ex.printStackTrace();
    }
        
    }//GEN-LAST:event_txt_searchKeyReleased

    private void txt_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_searchActionPerformed

    private void bt_suppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_suppActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_bt_suppActionPerformed

    private void bt_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_updateActionPerformed
            // TODO add your handling code here:                                                                                                                           
    int selectedRow = tb_list.getSelectedRow();
    if (selectedRow != -1) {
        int loanId = (int) tb_list.getValueAt(selectedRow, 0); // mi Assicuro che il primo valore della riga selezionata sia l'ID del prestito
        int userId = (int) tb_list.getValueAt(selectedRow, 1); // mi Assicuro che il secondo valore della riga selezionata sia l'ID dell'utente
        int bookId = (int) tb_list.getValueAt(selectedRow, 2); // mi Assicuro che il terzo valore della riga selezionata sia l'ID del libro
        Date startDate = parseDate(txtStartDate.getText()); // Recupero la data di inizio aggiornata
        Date endDate = parseDate(txtEndDate.getText()); 
        String status = (String) jComboBox3.getSelectedItem();
       

        try {
            // Chiamata al server RMI per l'aggiornamento del prestito
            Registry registry = LocateRegistry.getRegistry("127.0.0.1", 1234);
            LoanInterface Stub = (LoanInterface) registry.lookup("loans");
            Loan loan = new Loan(loanId, userId, bookId, startDate, endDate,status);

            boolean updated = Stub.updateLoan(loan);

            if (updated) {
                JOptionPane.showMessageDialog(this, "Prestito aggiornato con successo.", "Successo", JOptionPane.INFORMATION_MESSAGE);

                // Aggiornamento della tabella dopo l'aggiornamento
                List<Loan> loans = Stub.getAllLoans();
                LoanTableModel model = new LoanTableModel(loans);
                tb_list.setModel(model);
            } else {
                JOptionPane.showMessageDialog(this, "Impossibile aggiornare il prestito.", "Errore", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Errore durante l'aggiornamento del prestito: " + ex.getMessage(), "Errore", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    } else {
        JOptionPane.showMessageDialog(this, "Seleziona un prestito da aggiornare.", "Errore", JOptionPane.ERROR_MESSAGE);
    }


        
    }//GEN-LAST:event_bt_updateActionPerformed
     // Metodo per gestire l'evento di conferma prestito
  
    private void confirmLoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmLoanActionPerformed
         // Recupera le date dai JTextField
        Date startDate = parseDate(txtStartDate.getText());
        Date endDate = parseDate(txtEndDate.getText());
        
        // Recupera il nome dell'utente selezionato dal JComboBox
        String selectedUser = (String) jComboBox1.getSelectedItem();
        // Recupera l'oggetto Book selezionato dal JComboBox dei libri
        String selectedBook = (String) jComboBox2.getSelectedItem();
        String selectedstatus= (String) jComboBox3.getSelectedItem();
        


    if (startDate != null && endDate != null && selectedUser != null && selectedBook != null) {
        try {
            
            // Chiamata al metodo makeLoan dell'interfaccia remota con le date di inizio, fine, l'ID utente e l'ID libro
Registry registry = LocateRegistry.getRegistry("127.0.0.1", 1234);
            LoanInterface Stub = (LoanInterface) registry.lookup("loans");
            UserInterface Stub1 = (UserInterface) registry.lookup("users");
            Bookinterface Stub2 = (Bookinterface) registry.lookup("books");
                 int selectedUserId = Stub1.getUserIdByName(selectedUser);
                 int selectedBookId = Stub2.getBookIdByName(selectedBook);

        // Contatta il server RMI e chiama il metodo per aggiungere il libro
        // Crea un nuovo oggetto Book con i dati inseriti
         Loan loan = new Loan(selectedUserId,selectedBookId,startDate, endDate,selectedstatus);

            boolean added = Stub.addLoan(loan);
            if (added) {
 JOptionPane.showMessageDialog(this,added, "Prestito effettuato con successo!",JOptionPane.INFORMATION_MESSAGE);
 // Aggiornamento della tabella con i nuovi dati dei libri
            List<Loan> loans = Stub.getAllLoans();
            LoanTableModel model = new LoanTableModel(loans);
            tb_list.setModel(model);
            
        } else {
            JOptionPane.showMessageDialog(this, "Impossibile aggiungere il prestito.");
        }
        
    } catch (Exception ex) { 
        JOptionPane.showMessageDialog(this, "Errore durante l'aggiunta del prestito: " + ex.getMessage());
        ex.printStackTrace();
    }
           
       
}
    }//GEN-LAST:event_confirmLoanActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoanClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoanClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoanClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoanClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoanClient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_supp;
    private javax.swing.JButton bt_update;
    private javax.swing.JButton confirmLoan;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel m;
    private javax.swing.JTable tb_list;
    private javax.swing.JTextField txtEndDate;
    private javax.swing.JTextField txtStartDate;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_search;
    // End of variables declaration//GEN-END:variables

  
}
