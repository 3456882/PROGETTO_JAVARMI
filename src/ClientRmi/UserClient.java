/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ClientRmi;

import Metier.User;
import Services.UserInterface;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;

/**
 *
 * @author Utente
 */
public class UserClient extends javax.swing.JFrame {

    /**
     * Creates new form UserClient
     */
    public UserClient() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_username = new javax.swing.JTextField();
        txt_pass = new javax.swing.JTextField();
        txt_firstname = new javax.swing.JTextField();
        txt_mail = new javax.swing.JTextField();
        txt_lastname = new javax.swing.JTextField();
        m = new javax.swing.JPanel();
        bt_ajout2 = new javax.swing.JButton();
        bt_update = new javax.swing.JButton();
        bt_supp = new javax.swing.JButton();
        txt_search = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_list = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Century Schoolbook", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Book Management Client");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("EMAIL :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("  Username :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText(" firstname :");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("    Password :");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Lastname :");

        txt_username.setBackground(new java.awt.Color(255, 0, 102));
        txt_username.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txt_pass.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txt_firstname.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txt_mail.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txt_lastname.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        m.setBackground(new java.awt.Color(204, 0, 204));
        m.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        bt_ajout2.setBackground(new java.awt.Color(204, 0, 204));
        bt_ajout2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        bt_ajout2.setForeground(new java.awt.Color(255, 255, 255));
        bt_ajout2.setText("Insert");
        bt_ajout2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_ajout2ActionPerformed(evt);
            }
        });

        bt_update.setBackground(new java.awt.Color(204, 0, 204));
        bt_update.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        bt_update.setForeground(new java.awt.Color(255, 255, 255));
        bt_update.setText("Update");
        bt_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_updateActionPerformed(evt);
            }
        });

        bt_supp.setBackground(new java.awt.Color(204, 0, 204));
        bt_supp.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        bt_supp.setForeground(new java.awt.Color(255, 255, 255));
        bt_supp.setText("Delete");
        bt_supp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_suppActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mLayout = new javax.swing.GroupLayout(m);
        m.setLayout(mLayout);
        mLayout.setHorizontalGroup(
            mLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(bt_ajout2, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(119, 119, 119)
                .addComponent(bt_update, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE)
                .addComponent(bt_supp, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );
        mLayout.setVerticalGroup(
            mLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(mLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_ajout2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_update, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_supp, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        txt_search.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_searchActionPerformed(evt);
            }
        });
        txt_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_searchKeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Search :");

        tb_list.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tb_list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tb_listMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tb_list);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_pass, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txt_username, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txt_firstname, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGap(18, 18, 18)
                                            .addComponent(txt_mail, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel6)
                                            .addGap(18, 18, 18)
                                            .addComponent(txt_lastname, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(27, 27, 27))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(m, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_username, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txt_pass, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(31, 31, 31)
                                .addComponent(txt_firstname, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt_lastname, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txt_mail, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)))
                .addComponent(m, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void refreshUserList() {
    try {
        // Chiamata al server RMI per ottenere la lista aggiornata dei libri
        Registry registry = LocateRegistry.getRegistry("127.0.0.1", 1234);
            UserInterface Stub = (UserInterface) registry.lookup("users");
        List<User> users = Stub.getAllUsers();
       UserTableModel model = new UserTableModel(users);
        tb_list.setModel(model);
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Errore durante l'aggiornamento della lista dei libri: " + ex.getMessage(), "Errore", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace();
    }
}
    
    
    
    
    private void bt_ajout2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_ajout2ActionPerformed
        // TODO add your handling code here:
        String username = txt_username.getText(); // Ottieni il titolo del libro dalla GUI
        String password = txt_pass.getText(); // Ottieni l'autore del libro dalla GUI
        String firstName = txt_firstname.getText(); // Ottieni la categoria del libro dalla GUI
        String lastName = txt_lastname.getText();
        String email = txt_mail.getText();// Ottieni la quantità del libro dalla GUI
        
        
         if (EmailValidator.isValid(email)) {
                        // L'email è valida, procedi con il tuo codice
                        try {
            
           
           
            Registry registry = LocateRegistry.getRegistry("127.0.0.1", 1234);
            UserInterface Stub = (UserInterface) registry.lookup("users");

            // Contatta il server RMI e chiama il metodo per aggiungere il libro
            // Crea un nuovo oggetto Book con i dati inseriti
            User user = new User(username,password,firstName,lastName,email);

            boolean added = Stub.addUser(user);

            if (added) {
                JOptionPane.showMessageDialog(this,added, "Libro aggiunto con successo.",JOptionPane.INFORMATION_MESSAGE);
                // Aggiornamento della tabella con i nuovi dati dei libri
                List<User> users = Stub.getAllUsers();
                UserTableModel model = new UserTableModel(users);
                tb_list.setModel(model);
            } else {
                JOptionPane.showMessageDialog(this, "Impossibile aggiungere il libro.");
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Errore durante l'aggiunta del libro: " + ex.getMessage());
            ex.printStackTrace();
        }
                    } else {
                       JOptionPane.showMessageDialog(this, "Impossibile aggiungere il libro perche la mail non correto.");
                    }
        
    }//GEN-LAST:event_bt_ajout2ActionPerformed

    private void bt_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_updateActionPerformed
        // TODO add your handling code here:
        int selectedRow = tb_list.getSelectedRow();
        if (selectedRow != -1) {
            int userId = (int) tb_list.getValueAt(selectedRow, 0);
           String username = txt_username.getText(); // Ottieni il titolo del libro dalla GUI
        String password = txt_pass.getText(); // Ottieni l'autore del libro dalla GUI
        String firstName = txt_firstname.getText(); // Ottieni la categoria del libro dalla GUI
        String lastName = txt_lastname.getText();
        String email = txt_mail.getText();// Ottieni la quantità del libro dalla GUI

        try {
           
            Registry registry = LocateRegistry.getRegistry("127.0.0.1", 1234);
            UserInterface Stub = (UserInterface) registry.lookup("users");
                User user = new User(userId,username,password,firstName,lastName,email);

                boolean updated = Stub.updateUser(user);

                if (updated) {
                    JOptionPane.showMessageDialog(this, "Libro aggiornato con successo.", "Successo", JOptionPane.INFORMATION_MESSAGE);

                    // Aggiornamento della tabella dopo l'aggiornamento
                    List<User> users = Stub.getAllUsers();
                    UserTableModel model = new UserTableModel(users);
                    tb_list.setModel(model);
                } else {
                    JOptionPane.showMessageDialog(this, "Impossibile aggiornare il libro.", "Errore", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Errore durante l'aggiornamento del libro: " + ex.getMessage(), "Errore", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleziona un libro da aggiornare.", "Errore", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_bt_updateActionPerformed

    private void bt_suppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_suppActionPerformed
        // TODO add your handling code here:
        int selectedRow = tb_list.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Seleziona un libro da eliminare.", "Attenzione", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int userId = (int) tb_list.getValueAt(selectedRow, 0);

        try {
            // Chiamata al server RMI per eliminare il libro selezionato
            Registry registry = LocateRegistry.getRegistry("127.0.0.1", 1234);
            UserInterface Stub = (UserInterface) registry.lookup("users");
            boolean deleted = Stub.deleteUser(userId);

            if (deleted) {
                JOptionPane.showMessageDialog(this, "Libro eliminato con successo.", "Successo", JOptionPane.INFORMATION_MESSAGE);
                refreshUserList();
            } else {
                JOptionPane.showMessageDialog(this, "Impossibile eliminare il libro.", "Errore", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Errore durante l'eliminazione del libro: " + ex.getMessage(), "Errore", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }//GEN-LAST:event_bt_suppActionPerformed

    private void txt_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_searchActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txt_searchActionPerformed

    private void txt_searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyReleased
        // TODO add your handling code here:

        try {
            Registry registry = LocateRegistry.getRegistry("127.0.0.1", 1234);
            UserInterface Stub = (UserInterface) registry.lookup("users");
            String searchTerm = txt_search.getText().trim();
            // Chiamata al server RMI per eseguire la ricerca
            List<User> searchResults = Stub.searchUsers(searchTerm);
            UserTableModel model = new UserTableModel(searchResults);
            tb_list.setModel(model);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_txt_searchKeyReleased

    private void tb_listMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_listMouseReleased
        // TODO add your handling code here:
        // Ottieni l'indice della riga selezionata
        int rowIndex = tb_list.getSelectedRow();

        // Assicurati che sia stata selezionata una riga valida
        if (rowIndex != -1) {
            // Ottieni il modello della tabella
            TableModel model = tb_list.getModel();

            // Controlla se il modello è di tipo BookTableModel
            if (model instanceof BookTableModel) {
                UserTableModel userModel = (UserTableModel) model;

                // Ottieni il libro dalla riga selezionata
                User user = userModel.getUserAt(rowIndex);

                // Imposta i valori nei campi di testo
                //txt_username.setText(Integer.toString(user.getIduser()));
                txt_username.setText(user.getUsername());
                txt_pass.setText(user.getPassword());
                txt_firstname.setText(user.getFirstName());
                txt_lastname.setText(user.getLastName());
                txt_mail.setText(user.getEmail());
            }
        }
    }//GEN-LAST:event_tb_listMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserClient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_ajout2;
    private javax.swing.JButton bt_supp;
    private javax.swing.JButton bt_update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel m;
    private javax.swing.JTable tb_list;
    private javax.swing.JTextField txt_firstname;
    private javax.swing.JTextField txt_lastname;
    private javax.swing.JTextField txt_mail;
    private javax.swing.JTextField txt_pass;
    private javax.swing.JTextField txt_search;
    private javax.swing.JTextField txt_username;
    // End of variables declaration//GEN-END:variables
}
