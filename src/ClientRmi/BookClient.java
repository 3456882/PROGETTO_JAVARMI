/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ClientRmi;

import Metier.Book;
import Services.Bookinterface;
import javax.swing.JOptionPane;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;


/**
 *
 * @author Utente
 */
public class BookClient extends javax.swing.JFrame {

    /**
     * Creates new form BookClient
     */
    
    
    public BookClient() {
        initComponents();
        loadBooks();
    }
    private void loadBooks() {
    try {
        // Chiamata al server RMI per ottenere tutti i libri
         Registry registry = LocateRegistry.getRegistry("127.0.0.1", 1234);
            Bookinterface Stub = (Bookinterface) registry.lookup("books");
        List<Book> books = Stub.getAllBooks();
        
        // Popola la tabella con i dati dei libri
        BookTableModel model = new BookTableModel(books);
        tb_list.setModel(model);
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Errore durante il caricamento dei libri: " + ex.getMessage(), "Errore", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace();
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_id = new javax.swing.JTextField();
        txt_title = new javax.swing.JTextField();
        txt_aut = new javax.swing.JTextField();
        txt_nb = new javax.swing.JTextField();
        txt_cat = new javax.swing.JTextField();
        m = new javax.swing.JPanel();
        bt_ajout2 = new javax.swing.JButton();
        bt_update = new javax.swing.JButton();
        bt_supp = new javax.swing.JButton();
        txt_search = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_list = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Century Schoolbook", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Book Management Client");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Matricule :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("  Title :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText(" Category :");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("    Author :");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText(" Quantity :");

        txt_id.setBackground(new java.awt.Color(255, 0, 102));
        txt_id.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txt_title.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txt_aut.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txt_nb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txt_cat.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        m.setBackground(new java.awt.Color(204, 0, 204));
        m.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        bt_ajout2.setBackground(new java.awt.Color(204, 0, 204));
        bt_ajout2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        bt_ajout2.setForeground(new java.awt.Color(255, 255, 255));
        bt_ajout2.setText("Insert");
        bt_ajout2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_ajout2ActionPerformed(evt);
            }
        });

        bt_update.setBackground(new java.awt.Color(204, 0, 204));
        bt_update.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        bt_update.setForeground(new java.awt.Color(255, 255, 255));
        bt_update.setText("Update");
        bt_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_updateActionPerformed(evt);
            }
        });

        bt_supp.setBackground(new java.awt.Color(204, 0, 204));
        bt_supp.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        bt_supp.setForeground(new java.awt.Color(255, 255, 255));
        bt_supp.setText("Delete");
        bt_supp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_suppActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mLayout = new javax.swing.GroupLayout(m);
        m.setLayout(mLayout);
        mLayout.setHorizontalGroup(
            mLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(bt_ajout2, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(119, 119, 119)
                .addComponent(bt_update, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE)
                .addComponent(bt_supp, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );
        mLayout.setVerticalGroup(
            mLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(mLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_ajout2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_update, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_supp, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        txt_search.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_searchActionPerformed(evt);
            }
        });
        txt_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_searchKeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Search :");

        tb_list.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tb_list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tb_listMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tb_list);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_nb, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txt_aut, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(18, 18, 18)
                                    .addComponent(txt_title))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_cat, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(27, 27, 27))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(m, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt_title, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(txt_aut, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(txt_cat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(txt_nb, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)))
                .addComponent(m, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setBounds(0, 0, 892, 492);
    }// </editor-fold>//GEN-END:initComponents

    private void refreshBookList() {
    try {
        // Chiamata al server RMI per ottenere la lista aggiornata dei libri
        Registry registry = LocateRegistry.getRegistry("127.0.0.1", 1234);
            Bookinterface Stub = (Bookinterface) registry.lookup("books");
        List<Book> books = Stub.getAllBooks();
        BookTableModel model = new BookTableModel(books);
        tb_list.setModel(model);
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Errore durante l'aggiornamento della lista dei libri: " + ex.getMessage(), "Errore", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace();
    }
}

    private void bt_suppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_suppActionPerformed
        // TODO add your handling code here:                                          
    int selectedRow = tb_list.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Seleziona un libro da eliminare.", "Attenzione", JOptionPane.WARNING_MESSAGE);
        return;
    }

    int bookId = (int) tb_list.getValueAt(selectedRow, 0);

    try {
        // Chiamata al server RMI per eliminare il libro selezionato
        Registry registry = LocateRegistry.getRegistry("127.0.0.1", 1234);
            Bookinterface Stub = (Bookinterface) registry.lookup("books");
        boolean deleted = Stub.deleteBook(bookId);
        
        if (deleted) {
            JOptionPane.showMessageDialog(this, "Libro eliminato con successo.", "Successo", JOptionPane.INFORMATION_MESSAGE);
            refreshBookList();
        } else {
            JOptionPane.showMessageDialog(this, "Impossibile eliminare il libro.", "Errore", JOptionPane.ERROR_MESSAGE);
        }
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Errore durante l'eliminazione del libro: " + ex.getMessage(), "Errore", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace();
    }

    }//GEN-LAST:event_bt_suppActionPerformed

    private void bt_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_updateActionPerformed
        // TODO add your handling code here:                                                                                  
    int selectedRow = tb_list.getSelectedRow();
    if (selectedRow != -1) {
        int bookId = (int) tb_list.getValueAt(selectedRow, 0);
        String title = txt_title.getText();
        String author = txt_aut.getText();
        String category = txt_cat.getText();
        int quantity = Integer.parseInt(txt_nb.getText());

        try {
            // Chiamata al server RMI per l'aggiornamento del libro
             Registry registry = LocateRegistry.getRegistry("127.0.0.1", 1234);
            Bookinterface Stub = (Bookinterface) registry.lookup("books");
            Book book = new Book(bookId, title, author, category, quantity);
           
            boolean updated = Stub.updateBook(book);
            
            if (updated) {
                JOptionPane.showMessageDialog(this, "Libro aggiornato con successo.", "Successo", JOptionPane.INFORMATION_MESSAGE);
                
                // Aggiornamento della tabella dopo l'aggiornamento
                List<Book> books = Stub.getAllBooks();
                BookTableModel model = new BookTableModel(books);
                tb_list.setModel(model);
            } else {
                JOptionPane.showMessageDialog(this, "Impossibile aggiornare il libro.", "Errore", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Errore durante l'aggiornamento del libro: " + ex.getMessage(), "Errore", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    } else {
        JOptionPane.showMessageDialog(this, "Seleziona un libro da aggiornare.", "Errore", JOptionPane.ERROR_MESSAGE);
    }




    }//GEN-LAST:event_bt_updateActionPerformed

    private void bt_ajout2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_ajout2ActionPerformed
        // TODO add your handling code here:
        String title = txt_title.getText(); // Ottieni il titolo del libro dalla GUI
    String author = txt_aut.getText(); // Ottieni l'autore del libro dalla GUI
    String category = txt_cat.getText(); // Ottieni la categoria del libro dalla GUI
    int quantity = Integer.parseInt(txt_nb.getText()); // Ottieni la quantità del libro dalla GUI
    
        
    try {
         //Bookinterface Stub=(Bookinterface)Naming.lookup("rmi://localhost:1234/books");
        Registry registry = LocateRegistry.getRegistry("127.0.0.1", 1234);
            Bookinterface Stub = (Bookinterface) registry.lookup("books");

        // Contatta il server RMI e chiama il metodo per aggiungere il libro
        // Crea un nuovo oggetto Book con i dati inseriti
         Book book = new Book(title, author, category, quantity);

            boolean added = Stub.addBook(book);
        
        if (added) {
            JOptionPane.showMessageDialog(this,added, "Libro aggiunto con successo.",JOptionPane.INFORMATION_MESSAGE);
            // Aggiornamento della tabella con i nuovi dati dei libri
            List<Book> books = Stub.getAllBooks();
            BookTableModel model = new BookTableModel(books);
            tb_list.setModel(model);
        } else {
            JOptionPane.showMessageDialog(this, "Impossibile aggiungere il libro.");
        }
        
    } catch (Exception ex) { 
        JOptionPane.showMessageDialog(this, "Errore durante l'aggiunta del libro: " + ex.getMessage());
        ex.printStackTrace();
    }
    }//GEN-LAST:event_bt_ajout2ActionPerformed

    private void txt_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_searchActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txt_searchActionPerformed

    private void txt_searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyReleased
        // TODO add your handling code here:
                                             
    try {
         Registry registry = LocateRegistry.getRegistry("127.0.0.1", 1234);
            Bookinterface Stub = (Bookinterface) registry.lookup("books");
        String searchTerm = txt_search.getText().trim();
        // Chiamata al server RMI per eseguire la ricerca
        List<Book> searchResults = Stub.searchBooks(searchTerm);
        BookTableModel model = new BookTableModel(searchResults);
        tb_list.setModel(model);
    } catch (Exception ex) {
        ex.printStackTrace();
    }

    }//GEN-LAST:event_txt_searchKeyReleased

    private void tb_listMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_listMouseReleased
        // TODO add your handling code here:
        // Ottieni l'indice della riga selezionata
    int rowIndex = tb_list.getSelectedRow();
    
    // Assicurati che sia stata selezionata una riga valida
    if (rowIndex != -1) {
        // Ottieni il modello della tabella
        TableModel model = tb_list.getModel();
        
        // Controlla se il modello è di tipo BookTableModel
        if (model instanceof BookTableModel) {
            BookTableModel bookModel = (BookTableModel) model;
            
            // Ottieni il libro dalla riga selezionata
            Book book = bookModel.getBookAt(rowIndex);
            
            // Imposta i valori nei campi di testo
            txt_id.setText(Integer.toString(book.getIdbook()));
            txt_title.setText(book.getTitle());
            txt_aut.setText(book.getAuthor());
            txt_cat.setText(book.getCategory());
            txt_nb.setText(Integer.toString(book.getQuantity()));
        }
    }
    }//GEN-LAST:event_tb_listMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookClient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_ajout2;
    private javax.swing.JButton bt_supp;
    private javax.swing.JButton bt_update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel m;
    private javax.swing.JTable tb_list;
    private javax.swing.JTextField txt_aut;
    private javax.swing.JTextField txt_cat;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_nb;
    private javax.swing.JTextField txt_search;
    private javax.swing.JTextField txt_title;
    // End of variables declaration//GEN-END:variables
}
